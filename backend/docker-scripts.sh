#!/bin/bash

# Bash —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏

echo "üê≥ Plllasma Backend Docker Management Scripts"

show_menu() {
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç—å dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    echo "3. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "4. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã"
    echo "5. –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "6. –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MySQL"
    echo "7. –û—á–∏—Å—Ç–∏—Ç—å volumes"
    echo "0. –í—ã—Ö–æ–¥"
    echo ""
}

start_production() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    docker-compose -f docker-compose.yml up -d
    echo "‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo "üìä Backend: http://localhost:3001"
    echo "üóÑÔ∏è phpMyAdmin: http://localhost:8080"
    echo "üîó MySQL: localhost:3306"
}

start_development() {
    echo "üõ†Ô∏è –ó–∞–ø—É—Å–∫ dev –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    docker-compose -f docker-compose.dev.yml up -d
    echo "‚úÖ Dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo "üìä Backend: http://localhost:3001"
    echo "üóÑÔ∏è phpMyAdmin: http://localhost:8081"
    echo "üîó MySQL: localhost:3307"
}

stop_all() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.yml down
    docker-compose -f docker-compose.dev.yml down
    echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

rebuild_images() {
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f docker-compose.yml build --no-cache
    docker-compose -f docker-compose.dev.yml build --no-cache
    echo "‚úÖ –û–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã!"
}

show_logs() {
    echo "üìã –í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:"
    echo "1. –ü—Ä–æ–¥–∞–∫—à–Ω"
    echo "2. Dev"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: " choice
    
    case $choice in
        1)
            docker-compose -f docker-compose.yml logs -f backend
            ;;
        2)
            docker-compose -f docker-compose.dev.yml logs -f backend
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

connect_mysql() {
    echo "üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL..."
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
    echo "1. –ü—Ä–æ–¥–∞–∫—à–Ω (–ø–æ—Ä—Ç 3306)"
    echo "2. Dev (–ø–æ—Ä—Ç 3307)"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: " choice
    
    case $choice in
        1)
            docker exec -it plllasma_mysql mysql -u plllasma -p plllasma
            ;;
        2)
            docker exec -it plllasma_mysql_dev mysql -u plllasma -p plllasma
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

clean_volumes() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ volumes..."
    echo "‚ö†Ô∏è –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
    
    if [[ $confirm == "y" || $confirm == "Y" ]]; then
        docker-compose -f docker-compose.yml down -v
        docker-compose -f docker-compose.dev.yml down -v
        docker volume prune -f
        echo "‚úÖ Volumes –æ—á–∏—â–µ–Ω—ã!"
    else
        echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    show_menu
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: " choice
    
    case $choice in
        1) start_production ;;
        2) start_development ;;
        3) stop_all ;;
        4) rebuild_images ;;
        5) show_logs ;;
        6) connect_mysql ;;
        7) clean_volumes ;;
        0) 
            echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            break
            ;;
        *) 
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
    
    if [[ $choice != "0" ]]; then
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    fi
done
