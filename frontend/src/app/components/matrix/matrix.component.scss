.matrix-container {
  &.collapsed {
    max-height: var(--matrix-collapsed-height);
    overflow-y: hidden;
    display: flex;
    flex-direction: column;
    .matrix {
      pointer-events: none;
    }
    .matrix-expander {
      position: relative;
      z-index: 1;
      top: 0;
      width: 0;
      height: 0;

      &-blocker {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        height: var(--matrix-collapsed-height);
        background: linear-gradient(180deg, rgba(215,202,187,0) 0, rgba(215,202,187,1) 100%);
        cursor: pointer;

        .expand-butt {
          display: flex;
          flex-direction: row;
          justify-content: center;
          align-items: center;
          background-color: var(--color-page-bg);
          height: 1.5rem;
          border-radius: var(--border-radius);
          padding: 0 1rem;
          &>:not(:last-child) {
            margin-right: 0.8rem;
          }
          b {
            display: block;
            color: var(--color-gray);
          }
          div {
            display: inline-block;
            height: 1px;
            width: 9rem;
            border-bottom: 1px solid var(--color-gray);
          }
        }

        &:hover {
          background: none;
          .expand-butt {
            b {
              color: var(--color-black);
            }
            div {
              border-bottom-color: var(--color-black);
            }
          }
        }
      }
    }
  }
}

.matrix {
  display: block;
  width: 100%;
  min-width: 600px;
  min-height: 10px; // чтобы она раскукожилась. А то её размер зависит от cellSize а cellSize зависит от её размера.

  .bg {
    position: relative;
    z-index: var(--z-matrix-bg);
    left: 0;
    right: 0;

    display: flex;
    flex-direction: row;
    justify-content: stretch;
    align-items: stretch;
    opacity: 0.3;

    :nth-child(1) {
      display: inline-block;
      background-image: url('~src/assets/img/matrix-bg.png');
      min-width: calc((var(--matrix-cell-size) + var(--matrix-gap)) * var(--matrix-flex-col));
    }
    :nth-child(2) {
      display: inline-block;
      background-image: url('~src/assets/img/matrix-flex-bg.png');
      background-size: 100% calc(var(--matrix-cell-size) + var(--matrix-gap));
      background-repeat: repeat-y;
      flex-grow: 1;
    }
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(21, var(--matrix-cell-size)) minmax(var(--matrix-cell-size), 1fr);
    grid-auto-rows: var(--matrix-cell-size);
    gap: var(--matrix-gap);
    width: 100%;
    height: 100%;
  }
}

.item {
  display: inline-block;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  user-select: none;
  border-radius: var(--border-radius);
  cursor: move;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-color: var(--color-matrix-object-bg);

  &.selected {
    cursor: pointer;
  }

  &.dragging {
    position: absolute;
    z-index: var(--z-matrix-drag-item);

    &-placeholder {
      z-index: var(--z-matrix-drag-item-placeholder);
      background-color: rgba(0, 0, 0, 0.3);
    }
  }

  &-text {
    font-size: 1rem;
    padding-top: 0.4rem; // если блок высотой в 1 клетку и в нём одна строка текста - она по вертикали должна выровняться по центру
  }

  &-title {
    font-size: 1.2rem;
    font-weight: bold;
    padding-top: 0.3rem; // если блок высотой в 1 клетку и в нём одна строка текста - она по вертикали должна выровняться по центру
  }

  &-channel-title {
    font-size: 1.5rem;
    font-weight: bold;
    background-color: var(--color-page-bg);
  }

  .content {
    pointer-events: none;
  }
}

#martixFileUpload {
  display: none;
}

.matrix-star {
  /*filter: grayscale(80%) blur(6px);*/
  &:before {
    display: inline-block;
    position: relative;
    z-index: 100;
    top: 2px;
    left: 3px;
    width: var(--matrix-star-size);
    height: var(--matrix-star-size);
    border-radius: calc(var(--matrix-star-size) / 2);
    background-color: var(--color-star);
    content: " ";
    box-sizing: border-box;
    animation: 3s linear infinite blink;

    &:nth-child(2n) { animation-delay: -10s }
    &:nth-child(2n+1) { animation-delay: -30s }
    &:nth-child(3n) { animation-delay: -20s; }
    &:nth-child(5n) { animation-delay: -40s }
    &:nth-child(7n) { animation-delay: -15s }
  }
}
