.matrix {
  display: block;
  width: 100%;
  min-width: 600px;
  min-height: 10px; // чтобы она раскукожилась. А то её размер зависит от cellSize а cellSize зависит от её размера.

  .bg {
    position: relative;
    z-index: var(--z-matrix-bg); 
    left: 0;
    right: 0;

    display: flex;
    flex-direction: row;
    justify-content: stretch;
    align-items: stretch;
    opacity: 0.3;

    :nth-child(1) {
      display: inline-block;
      background-image: url('~src/assets/img/matrix-bg.png');
      min-width: calc((var(--matrix-cell-size) + var(--matrix-gap)) * var(--matrix-flex-col));
    }
    :nth-child(2) {
      display: inline-block;
      background-image: url('~src/assets/img/matrix-flex-bg.png');
      background-size: calc(100% - var(--matrix-gap)) calc(var(--matrix-cell-size) + var(--matrix-gap));
      background-repeat: repeat-y;
      flex-grow: 1;
    }
    :nth-child(3) {
      display: inline-block;
      background-image: url('~src/assets/img/matrix-bg.png');
      min-width: calc(((var(--matrix-cell-size) + var(--matrix-gap)) * var(--matrix-right-cols-count)) - var(--matrix-gap));
    }
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(12, var(--matrix-cell-size)) minmax(var(--matrix-cell-size), 1fr) repeat(4, var(--matrix-cell-size));
    grid-auto-rows: var(--matrix-cell-size);
    gap: var(--matrix-gap);
    width: 100%;
    height: 100%;
  }
}

.item {
  display: inline-block;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  user-select: none;
  border-radius: var(--border-radius);
  cursor: move;

  &.dragging {
    position: absolute;
    z-index: var(--z-matrix-drag-item);

    &-placeholder {
      z-index: var(--z-matrix-drag-item-placeholder);
      .content {
        background-color: rgba(0, 0, 0, 0.3);
      }
    }
  }

  .content {
    display:block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
  }
}
